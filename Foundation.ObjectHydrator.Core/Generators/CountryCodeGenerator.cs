using System.Collections.Generic;
using Foundation.ObjectHydrator.Interfaces;

namespace Foundation.ObjectHydrator.Generators
{
    public class CountryCodeGenerator : IGenerator<string>
    {
        
        private IList<string> countrycodes = new List<string>();

        public CountryCodeGenerator()
        {
            
            LoadCountryCodes();
        }

        public string Generate()
        {
            return new FromListGetSingleGenerator<string>(countrycodes).Generate();
        }

        private void LoadCountryCodes()
        {
            countrycodes = new List<string>() {
                "AD",
"AE",
"AG",
"AI",
"AL",
"AN",
"AP",
"AR",
"AS",
"AS",
"AT",
"AU",
"AW",
"BB",
"BC",
"BD",
"BE",
"BF",
"BG",
"BH",
"BI",
"BJ",
"BL",
"BM",
"BN",
"BO",
"BR",
"BW",
"BY",
"BZ",
"CA",
"CB",
"CC",
"CE",
"CF",
"CG",
"CH",
"CI",
"CK",
"CL",
"CM",
"CN",
"CO",
"CR",
"CV",
"CX",
"CY",
"CZ",
"DE",
"DJ",
"DK",
"DM",
"DO",
"DZ",
"EC",
"EE",
"EG",
"EN",
"ER",
"ES",
"ET",
"EU",
"FI",
"FJ",
"FM",
"FO",
"FR",
"GA",
"GB",
"GD",
"GF",
"GH",
"GI",
"GL",
"GM",
"GN",
"GP",
"GQ",
"GR",
"GT",
"GU",
"GW",
"GY",
"HK",
"HN",
"HO",
"HR",
"HT",
"HU",
"ID",
"IE",
"IL",
"IN",
"IQ",
"IR",
"IS",
"IT",
"JM",
"JO",
"JP",
"KE",
"KG",
"KH",
"KI",
"KN",
"KO",
"KR",
"KW",
"KY",
"KZ",
"LA",
"LB",
"LC",
"LI",
"LK",
"LR",
"LS",
"LT",
"LU",
"LV",
"MA",
"MB",
"MC",
"ME",
"MG",
"MH",
"MK",
"ML",
"MM",
"MO",
"MP",
"MQ",
"MR",
"MS",
"MT",
"MU",
"MV",
"MW",
"MX",
"MY",
"MZ",
"NA",
"NB",
"NC",
"NE",
"NF",
"NG",
"NI",
"NL",
"NN",
"NO",
"NP",
"NT",
"NU",
"NV",
"NZ",
"OM",
"PA",
"PE",
"PF",
"PG",
"PH",
"PK",
"PL",
"PO",
"PR",
"PT",
"PW",
"PY",
"QA",
"RE",
"RO",
"RT",
"RU",
"RW",
"SA",
"SB",
"SC",
"SD",
"SE",
"SF",
"SG",
"SI",
"SK",
"SL",
"SN",
"SP",
"SR",
"SS",
"SV",
"SW",
"SX",
"SY",
"SZ",
"TA",
"TB",
"TC",
"TD",
"TG",
"TH",
"TI",
"TJ",
"TL",
"TN",
"TO",
"TR",
"TT",
"TU",
"TV",
"TW",
"TZ",
"UA",
"UG",
"UI",
"US",
"UV",
"UY",
"UZ",
"VC",
"VE",
"VG",
"VI",
"VL",
"VN",
"VR",
"VU",
"WF",
"WK",
"WL",
"WS",
"YA",
"YE",
"ZA",
"ZM",
"ZR",
"ZW"};
        }
    }
}
